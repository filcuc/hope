set(BASE_TARGET_NAME hope)
set(TARGET_OBJECT_NAME "${BASE_TARGET_NAME}Objects")
set(TARGET_STATIC_NAME "${BASE_TARGET_NAME}Static")
set(TARGET_SHARED_NAME "${BASE_TARGET_NAME}")

set(TARGET_MAJOR 0)
set(TARGET_MINOR 0)
set(TARGET_PATCH 1)

file(GLOB_RECURSE TARGET_SOURCES *.cpp)
file(GLOB_RECURSE TARGET_HEADERS *.h)

# COMMON LIBRARIES
set(TARGET_LIBRARIES "")
if (UNIX OR MINGW)
    list(APPEND TARGET_LIBRARIES pthread)
endif()

include_directories(include)

# SHARED LIBRARY
add_library(${TARGET_SHARED_NAME} SHARED ${TARGET_SOURCES} ${TARGET_HEADERS})
target_link_libraries(${TARGET_SHARED_NAME} ${TARGET_LIBRARIES})
set_target_properties(${TARGET_SHARED_NAME} PROPERTIES
  SOVERSION "${TARGET_MAJOR}.${TARGET_MINOR}"
  VERSION "${TARGET_MAJOR}.${TARGET_MINOR}.${TARGET_PATCH}"
)
target_compile_definitions(${TARGET_SHARED_NAME} PRIVATE -DHOPE_USE_SHARED -DHOPE_EXPORT)

# STATIC LIBRARY
add_library(${TARGET_STATIC_NAME} STATIC ${TARGET_SOURCES} ${TARGET_HEADERS})
target_link_libraries(${TARGET_STATIC_NAME} ${TARGET_LIBRARIES})
target_compile_definitions(${TARGET_STATIC_NAME} PRIVATE -DHOPE_USE_STATIC)

# INSTALL DIRECTIVES
install(DIRECTORY include/hope DESTINATION include)
install(TARGETS ${TARGET_STATIC_NAME} ${TARGET_SHARED_NAME}
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)
